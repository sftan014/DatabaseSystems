MongoDB shell version v4.0.27
connecting to: mongodb://127.0.0.1:4000/A3solution?gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("b882fe9f-aa17-4ed8-a167-62ee0c045ecf") }
MongoDB server version: 4.0.27

// Student Number: 7020466
// Name: Tan Shu Fei
// Date Written: 21/11/2021
// Description: A3 BSON

Question 1:
List the customer name, address, and the created shopping cart who
purchased product is P1001

db.shoppingCart.aggregate([
	{$unwind: "$CUSTOMER.creates.SHOPPINGCART"},
	{$match: 
		{$and:
			[ 
			  {"CUSTOMER.creates.SHOPPINGCART.containsProdList.productId" : "P1001"}, 
			  {"CUSTOMER.creates.SHOPPINGCART.dateClosed" : {$ne:null} } 
			] 
		} 
	},
	{$project: {"CUSTOMER.customerName":1,
				   "CUSTOMER.customerAddress":1,
				   "CUSTOMER.creates":1,
				   "_id":0} }
]).pretty()

{
	"CUSTOMER" : {
		"customerName" : "Daniel Martin",
		"customerAddress" : {
			"street" : "718 Main Street",
			"building" : "Idea Tower 1",
			"postalCode" : "468419",
			"country" : "Singapore"
		},
		"creates" : {
			"SHOPPINGCART" : {
				"cartId" : "cart001",
				"dateCreated" : ISODate("2021-11-19T00:00:00Z"),
				"dateClosed" : ISODate("2021-11-15T00:00:00Z"),
				"containsProdList" : [
					{
						"prodListId" : 1,
						"productId" : "P1002",
						"quantity" : 2
					},
					{
						"prodListId" : 2,
						"productId" : "P1001",
						"quantity" : 1
					}
				]
			}
		}
	}
}
{
	"CUSTOMER" : {
		"customerName" : "Daniel Martin",
		"customerAddress" : {
			"street" : "718 Main Street",
			"building" : "Idea Tower 1",
			"postalCode" : "468419",
			"country" : "Singapore"
		},
		"creates" : {
			"SHOPPINGCART" : {
				"cartId" : "cart002",
				"dateCreated" : ISODate("2021-11-12T00:00:00Z"),
				"dateClosed" : ISODate("2021-11-19T00:00:00Z"),
				"containsProdList" : [
					{
						"prodListId" : 1,
						"productId" : "P1001",
						"quantity" : 3
					}
				]
			}
		}
	}
}
> 

Question 2:
List the customer name, address, and the created shopping cart of the
customer who created a shopping cart on 11 Nov 2021
(ISODate('2021-11-11T00:00:00Z'). Please do not show the customers ID.

db.shoppingCart.aggregate([
	{$unwind: "$CUSTOMER.creates.SHOPPINGCART"},
	{$match : {$and: 
		[{"CUSTOMER.creates.SHOPPINGCART.dateCreated" :
		 	{$gte: ISODate("2021-11-11T00:00:00Z") } }, 	
		 {"CUSTOMER.creates.SHOPPINGCART.dateCreated":
		 	{$lte: ISODate("2021-11-11T23:59:59Z") } 
		}] 
	} },
	{$project: {"CUSTOMER.customerName":1,
			"CUSTOMER.customerAddress":1,
			"CUSTOMER.creates":1,
			"_id":0} }
]).pretty()

{
	"CUSTOMER" : {
		"customerName" : "Andrew Smith",
		"customerAddress" : {
			"street" : "18 Bukit Timah",
			"building" : "Rose",
			"postalCode" : "589616",
			"country" : "Singapore"
		},
		"creates" : {
			"SHOPPINGCART" : {
				"cartId" : "cart003",
				"dateCreated" : ISODate("2021-11-11T00:00:00Z"),
				"dateClosed" : ISODate("2021-11-11T00:00:00Z"),
				"containsProdList" : [
					{
						"prodListId" : 1,
						"productId" : "P1002",
						"quantity" : 2
					},
					{
						"prodListId" : 2,
						"productId" : "P1003",
						"quantity" : 1
					}
				]
			}
		}
	}
}
> 

Question 3
Find the total number of shopping cart created by each customer.
For each customer, list his/her email address &
the total number of shopping cart created.

db.shoppingCart.aggregate([
	{$unwind: "$CUSTOMER.creates.SHOPPINGCART"},
	{$group: 
		{_id : {"customerEmail" : "$CUSTOMER.customerEmail"}, 
					count : {$sum:1} 
		}
	}
]).pretty()

{ "_id" : { "customerEmail" : "c12347@gmail.com" }, "count" : 3 }
{ "_id" : { "customerEmail" : "c12345@gmail.com" }, "count" : 2 }
> 

Question 4
Find the products that have been included in at least 2 or 3 shopping carts.

db.shoppingCart.find(
	{'PRODUCT.includedIn.1': {$exists:true} } 
).pretty()

{
	"_id" : "P1001",
	"PRODUCT" : {
		"productId" : "P1001",
		"productName" : "HD Scanner",
		"price" : {
			"unit" : "Dollar",
			"base" : "Australian",
			"value" : 800
		},
		"includedIn" : [
			"cart001",
			"cart002",
			"cart004"
		]
	}
}
{
	"_id" : "P1002",
	"PRODUCT" : {
		"productId" : "P1002",
		"productName" : "Red Toner",
		"price" : {
			"unit" : "Dollar",
			"base" : "Singapore",
			"value" : 90
		},
		"includedIn" : [
			"cart001",
			"cart003",
			"cart005"
		]
	}
}
> 

Question 5
For each price base, list the price base and the total number of each price
base.

db.shoppingCart.aggregate([
	{$unwind: "$PRODUCT.price.base"},
	{$group: {_id: {"Base":"$PRODUCT.price.base"}, 
									Count : {$sum:1} 
				} 
	}
]).pretty()

{ "_id" : { "Base" : "Singapore" }, "Count" : 2 }
{ "_id" : { "Base" : "US" }, "Count" : 1 }
{ "_id" : { "Base" : "Australian" }, "Count" : 1 }
> 

Question 6
Find the customers who have purchased both the 
products 'P1002' and 'P1003'.

db.shoppingCart.aggregate([
	{$unwind: "$CUSTOMER.creates.SHOPPINGCART"},
	{$match: 
		{$and: 
			[ {"CUSTOMER.creates.SHOPPINGCART.containsProdList.productId" 
				:"P1002"}, 
		  	  {"CUSTOMER.creates.SHOPPINGCART.containsProdList.productId" 
				:"P1003"} 
			]
		}
	}
]).pretty()

{
	"_id" : "C12347",
	"CUSTOMER" : {
		"customerId" : "C12347",
		"customerName" : "Andrew Smith",
		"customerAddress" : {
			"street" : "18 Bukit Timah",
			"building" : "Rose",
			"postalCode" : "589616",
			"country" : "Singapore"
		},
		"customerEmail" : "c12347@gmail.com",
		"creates" : {
			"SHOPPINGCART" : {
				"cartId" : "cart003",
				"dateCreated" : ISODate("2021-11-11T00:00:00Z"),
				"dateClosed" : ISODate("2021-11-11T00:00:00Z"),
				"containsProdList" : [
					{
						"prodListId" : 1,
						"productId" : "P1002",
						"quantity" : 2
					},
					{
						"prodListId" : 2,
						"productId" : "P1003",
						"quantity" : 1
					}
				]
			}
		}
	}
}
> 

Question 7
Find the products that have not been included
in any of the shopping cart

db.shoppingCart.aggregate([
	{$unwind: "$PRODUCT.includedIn"},
	{$match: {"PRODUCT.includedIn" : {$eq:null} } },
	{$project: {"PRODUCT":1, "_id":1} }
]).pretty()

{
	"_id" : "P1004",
	"PRODUCT" : {
		"productId" : "P1004",
		"productName" : "Huion Tablet",
		"price" : {
			"unit" : "Dollar",
			"base" : "Singapore",
			"value" : 360
		},
		"includedIn" : null
	}
}
> 

Question 8
Find the total number of customers who do not provide his/her telephone 
number

db.shoppingCart.aggregate([
	{$match: {"CUSTOMER" : {$ne:null} } },
	{$group: 
		{"_id": "$CUSTOMER.customerPhone",
					"Total number of customers do not provide phone"
					:{$sum:1} 
		} 
	},
	{$match: {"_id" : null} },
	{$project: {"_id":0} }
]).pretty()

{ "Total number of customers do not provide phone" : 1 }

Question 9
Update the closing date (dateClosed) of the cart ‘cart001’ of the customer
‘C12345’ to 15 November 2021. (Hint. You can use the function new
Date(“2021-11-15” to set the date.)

db.shoppingCart.drop()
load('/home/csci235/csci235/data/customerShoppingcartV2.js')

db.shoppingCart.update(
	{"_id" : "C12345" }, 
	{"$set": {"CUSTOMER.creates.SHOPPINGCART.$[xx].dateClosed"
					:new ISODate("2021-11-15") }
	},
	{"arrayFilters": [ {"xx.cartId":"cart001"} ] }
)

db.shoppingCart.find({"CUSTOMER.creates.SHOPPINGCART.cartId" : "cart001"}).pretty()

false
true
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
{
	"_id" : "C12345",
	"CUSTOMER" : {
		"customerId" : "C12345",
		"customerName" : "Daniel Martin",
		"customerAddress" : {
			"street" : "718 Main Street",
			"building" : "Idea Tower 1",
			"postalCode" : "468419",
			"country" : "Singapore"
		},
		"customerEmail" : "c12345@gmail.com",
		"customerPhone" : "92378888",
		"creates" : {
			"SHOPPINGCART" : [
				{
					"cartId" : "cart001",
					"dateCreated" : ISODate("2021-11-19T00:00:00Z"),
					"dateClosed" : ISODate("2021-11-15T00:00:00Z"),
					"containsProdList" : [
						{
							"prodListId" : 1,
							"productId" : "P1002",
							"quantity" : 2
						},
						{
							"prodListId" : 2,
							"productId" : "P1001",
							"quantity" : 1
						}
					]
				},
				{
					"cartId" : "cart002",
					"dateCreated" : ISODate("2021-11-12T00:00:00Z"),
					"dateClosed" : ISODate("2021-11-19T00:00:00Z"),
					"containsProdList" : [
						{
							"prodListId" : 1,
							"productId" : "P1001",
							"quantity" : 3
						}
					]
				}
			]
		}
	}
}


Question 10
Delete from the collection a shoppingcart (cart005) created by the customer
C12347

db.shoppingCart.drop()
load('/home/csci235/csci235/data/customerShoppingcartV2.js')

db.shoppingCart.update(
	{ "_id" : "C12347" }, 
	{$pull: {"CUSTOMER.creates.SHOPPINGCART":{cartId:"cart005"} } }
)

db.shoppingCart.find({"_id":"C12347"}).pretty()

true
true
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
{
	"_id" : "C12347",
	"CUSTOMER" : {
		"customerId" : "C12347",
		"customerName" : "Andrew Smith",
		"customerAddress" : {
			"street" : "18 Bukit Timah",
			"building" : "Rose",
			"postalCode" : "589616",
			"country" : "Singapore"
		},
		"customerEmail" : "c12347@gmail.com",
		"creates" : {
			"SHOPPINGCART" : [
				{
					"cartId" : "cart003",
					"dateCreated" : ISODate("2021-11-11T00:00:00Z"),
					"dateClosed" : ISODate("2021-11-11T00:00:00Z"),
					"containsProdList" : [
						{
							"prodListId" : 1,
							"productId" : "P1002",
							"quantity" : 2
						},
						{
							"prodListId" : 2,
							"productId" : "P1003",
							"quantity" : 1
						}
					]
				},
				{
					"cartId" : "cart004",
					"dateCreated" : ISODate("2021-11-14T00:00:00Z"),
					"dateClosed" : null,
					"containsProdList" : [
						{
							"prodListId" : 1,
							"productId" : "P1001",
							"quantity" : 3
						}
					]
				}
			]
		}
	}
}
bye
